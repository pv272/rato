
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "rato"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "rato-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('rato')
Warning: replacing previous import ‘dplyr::intersect’ by ‘lubridate::intersect’ when loading ‘rato’
Warning: replacing previous import ‘dplyr::union’ by ‘lubridate::union’ when loading ‘rato’
Warning: replacing previous import ‘hms::hms’ by ‘lubridate::hms’ when loading ‘rato’
Warning: replacing previous import ‘dplyr::setdiff’ by ‘lubridate::setdiff’ when loading ‘rato’
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("compute_elo_fixed_K")
> ### * compute_elo_fixed_K
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: compute_elo_fixed_K
> ### Title: compute_elo_fixed_K
> ### Aliases: compute_elo_fixed_K
> 
> ### ** Examples
> 
> con <- con <- DBI::dbConnect(RMySQL::MySQL(), user = 'philippev', password = getPass::getPass(),
+ dbname = 'Moleratdatabase', host = 'Kalahariresearch.org')
Please enter password in TK window (Alt+Tab)
> AllCall_Tidy <- get_all_call_tidy(con)
> Elo_Data <- filter_all_data(AllCall_Tidy, 15)
> test <- compute_elo_fixed_K(Elo_Data, K = 4)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("compute_elo_fixed_K", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("filter_all_data")
> ### * filter_all_data
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: filter_all_data
> ### Title: filter_all_data
> ### Aliases: filter_all_data
> 
> ### ** Examples
> 
> con <- con <- DBI::dbConnect(RMySQL::MySQL(), user = 'philippev', password = getPass::getPass(),
+ dbname = 'Moleratdatabase', host = 'Kalahariresearch.org')
Please enter password in TK window (Alt+Tab)
Error in .local(drv, ...) : 
  Failed to connect to database: Error: Access denied for user 'philippev'@'213.30.230.26' (using password: NO)
Calls: <Anonymous> -> <Anonymous> -> .local
Execution halted
